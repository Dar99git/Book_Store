// <auto-generated />
using System;
using BookStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStore.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20230301104859_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStore.Models.BOOK", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Book_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Book_Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Book_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("BOOKs");
                });

            modelBuilder.Entity("BookStore.Models.CARD", b =>
                {
                    b.Property<int>("CardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardID"));

                    b.Property<byte[]>("Card_Cvc")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Card_Exp_Date")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Card_Name")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("CardID");

                    b.ToTable("CARDs");
                });

            modelBuilder.Entity("BookStore.Models.CUSTOMER", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<int?>("CardID")
                        .HasColumnType("int");

                    b.Property<int>("Card_No")
                        .HasColumnType("int");

                    b.Property<string>("Customer_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CardID");

                    b.ToTable("CUSTOMERs");
                });

            modelBuilder.Entity("BookStore.Models.ORDER", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CardID")
                        .HasColumnType("int");

                    b.Property<int>("Card_No")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<byte[]>("Order_Payment_Method")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("Order_Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("Order_Total_Price")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("CardID");

                    b.HasIndex("CustomerId");

                    b.ToTable("ORDERs");
                });

            modelBuilder.Entity("BookStore.Models.BOOK", b =>
                {
                    b.HasOne("BookStore.Models.CUSTOMER", "CUSTOMER")
                        .WithMany("BOOKs")
                        .HasForeignKey("CustomerId");

                    b.Navigation("CUSTOMER");
                });

            modelBuilder.Entity("BookStore.Models.CUSTOMER", b =>
                {
                    b.HasOne("BookStore.Models.CARD", "CARD")
                        .WithMany("CUSTOMERs")
                        .HasForeignKey("CardID");

                    b.Navigation("CARD");
                });

            modelBuilder.Entity("BookStore.Models.ORDER", b =>
                {
                    b.HasOne("BookStore.Models.CARD", "CARD")
                        .WithMany("ORDERs")
                        .HasForeignKey("CardID");

                    b.HasOne("BookStore.Models.CUSTOMER", "CUSTOMER")
                        .WithMany("ORDERs")
                        .HasForeignKey("CustomerId");

                    b.Navigation("CARD");

                    b.Navigation("CUSTOMER");
                });

            modelBuilder.Entity("BookStore.Models.CARD", b =>
                {
                    b.Navigation("CUSTOMERs");

                    b.Navigation("ORDERs");
                });

            modelBuilder.Entity("BookStore.Models.CUSTOMER", b =>
                {
                    b.Navigation("BOOKs");

                    b.Navigation("ORDERs");
                });
#pragma warning restore 612, 618
        }
    }
}
